
══════════════════════════════════════════════════════════════
maps attributes : 
STL : 
Empty       : false
Size        : 5
Max size    : 288230376151711743
Content     : [[-652, One], [-210, Five], [-4, Two], [54, Four], [98, Three], ]

FT : 
Empty    [✔]: false
Size     [✔]: 5
Max size [✔]: 288230376151711743
Content  [✔]: [[-652, One], [-210, Five], [-4, Two], [54, Four], [98, Three], ]
══════════════════════════════════════════════════════════════

══════════════════════════════════════════════════════════════
maps attributes : 
STL : 
Empty       : false
Size        : 5
Max size    : 288230376151711743
Content     : [[-652, One], [-210, Five], [-4, Two], [54, Four], [98, Three], ]

FT : 
Empty    [✔]: false
Size     [✔]: 5
Max size [✔]: 288230376151711743
Content  [✔]: [[-652, One], [-210, Five], [-4, Two], [54, Four], [98, Three], ]
══════════════════════════════════════════════════════════════

Code executed:
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
const int range_int[] = {-652, -4, 98, 54, -210};
const std::string range_str[] = {"One", "Two", "Three", "Four", "Five"};
ft::Map<int, std::string> ft_map;
for (int i = 0; i < 5; i++)
    ft_map.insert(ft::make_pair(range_int[i], range_str[i]));
ft::Map<int, std::string> ft_map_copy(ft_map.begin(), ft_map.end());

Compared with:
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
const int range_int[] = {-652, -4, 98, 54, -210};
const std::string range_str[] = {"One", "Two", "Three", "Four", "Five"};
std::map<int, std::string> stl_map;
for (int i = 0; i < 5; i++)
    stl_map.insert(std::make_pair(range_int[i], range_str[i]));
std::map<int, std::string> stl_map_copy(stl_map.begin(), stl_map.end());
