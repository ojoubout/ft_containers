
══════════════════════════════════════════════════════════════
maps attributes : 
STL : 
Empty       : false
Size        : 5
Max size    : 288230376151711743
Content     : [[-987, Three], [52, Four], [96, Five], [148, One], [9874, Two], ]

FT : 
Empty    [✔]: false
Size     [✔]: 5
Max size [✔]: 288230376151711743
Content  [✔]: [[-987, Three], [52, Four], [96, Five], [148, One], [9874, Two], ]
══════════════════════════════════════════════════════════════

══════════════════════════════════════════════════════════════
maps attributes : 
STL : 
Empty       : true
Size        : 0
Max size    : 288230376151711743
Content     : []

FT : 
Empty    [✔]: true
Size     [✔]: 0
Max size [✔]: 288230376151711743
Content  [✔]: []
══════════════════════════════════════════════════════════════

Code executed:
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
const int range_int[] = {148, 9874, -987, 52, 96};
const std::string range_str[] = {"One", "Two", "Three", "Four", "Five"};
ft::Map<int, std::string> ft_map;
for (int i = 0; i < 5; i++)
    ft_map.insert(ft::make_pair(range_int[i], range_str[i]));
ft_map.clear()

Compared with:
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
const int range_int[] = {148, 9874, -987, 52, 96};
const std::string range_str[] = {"One", "Two", "Three", "Four", "Five"};
std::map<int, std::string> stl_map;
for (int i = 0; i < 5; i++)
    stl_map.insert(std::make_pair(range_int[i], range_str[i]));
stl_map.clear()
